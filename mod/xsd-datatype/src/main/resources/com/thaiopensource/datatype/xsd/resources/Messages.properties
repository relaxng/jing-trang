# Properties file specifying messages
enumeration_param=\"enumeration\" facet is not allowed as a parameter: use \"value\" element instead
whiteSpace_param=\"whiteSpace\" facet is not allowed as a parameter
unrecognized_param=unrecognized parameter \"{0}\"
invalid_regex=invalid regular expression: {0}
not_ordered=parameter can only be applied to ordered datatype
invalid_limit=\"{0}\" is not allowed by the base type: {1}
no_length=base datatype does not define a units of length
scale_not_derived_from_decimal=\"scale\" parameter can only be applied to datatype derived from \"decimal\"
scale_not_non_negative_integer=\"scale\" parameter must be non negative integer
length_not_non_negative_integer=\"length\" parameter must be non negative integer
precision_not_derived_from_decimal=\"precision\" parameter can only be applied to datatype derived from \"decimal\"
precision_not_positive_integer=\"precision\" parameter must be positive integer
regex_impl_not_found=cannot find regular expression implementation; use JDK 1.4 or add Xerces2 to your classpath
regex_internal_error=internal error in regular expression for datatype {0}

# validation errors
length_violation=must be {0} with length equal to {1} (actual length was {2})
max_length_violation=must be {0} with length at most {1} (actual length was {2})
min_length_violation=must be {0} with length at least {1} (actual length was {2})
min_inclusive_violation=must be {0} greater than or equal to {1}
min_exclusive_violation=must be {0} greater than {1}
max_inclusive_violation=must be {0} less than or equal to {1}
max_exclusive_violation=must be {0} less than {1}
pattern_violation=must be {0} matching the regular expression \"{1}\"
entity_violation=must be a name declared in the DTD as an unparsed entity
undeclared_prefix=must be a QName whose prefix, if any, is declared (prefix \"{0}\" is not declared)
precision_violation=must be {0} with at most {1} significant digits (found {2} digits)
precision_1_violation=must be {0} with exactly one significant digit (found {1} digits)
# part of the point is to avoid ugly "digit(s)" in the error message
scale_violation=must be a decimal number with at most {0} significant digits after the decimal point (found {1} digits)
scale_0_violation=must be a decimal number without any significant digits after the decimal point
scale_1_violation=must be a decimal number with at most one significant digit after the decimal point (found {0} digits)
lexical_violation=must be {0}

# fragments substituted in above
lexical_space_string=a string
lexical_space_uri=a URI
lexical_space_boolean=a boolean
lexical_space_decimal=a decimal number
lexical_space_float=a floating-point number
lexical_space_duration=a duration
lexical_space_hex=a hexadecimal string
lexical_space_base64=a base64 string
lexical_space_integer=an integer
lexical_space_name=an XML name
lexical_space_ncname=an XML name without colons
lexical_space_nmtoken=an XML NMTOKEN
lexical_space_qname=an XML QName
lexical_space_list=a whitespace-delimited list
lexical_space_list_ncname=a list of XML names without colons
lexical_space_list_nmtoken=a list of XML NMTOKENs
lexical_space_date_y_m_d_time=an ISO date and time
lexical_space_time=an ISO time
lexical_space_date_y_m_d=an ISO date
lexical_space_date_y_m=an ISO year and month
lexical_space_date_y=a year
lexical_space_date_m_d=an ISO month and day (of the form --MM-DD)
lexical_space_date_m=an ISO month (of the form --MM)
lexical_space_date_d=an ISO day of the month (of the form ---DD)
lexical_space_language=an RFC 3066 language identifier